# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KdV5_0Ae8kcFTDQNYauRSAEW-h10XUi7
"""

!pip install minisom


import numpy as np 
import matplotlib.pyplot as plt 
import pandas as pd 
from minisom import MiniSom


data = pd.read_csv('/content/Credit_Card_Applications.csv') 
data.info()


X = data.iloc[:, 1:15].values
y = data.iloc[:, -1].values


pd.DataFrame(X)


from sklearn.preprocessing import MinMaxScaler 
sc = MinMaxScaler(feature_range = (0, 1)) 
X = sc.fit_transform(X) 


pd.DataFrame(X)


# Set the hyperparameters 
som_gris_rows = 10 
som_grid_columns = 10 
iterations = 2000
sigma = 1 
learning_rate = 0.5 



# Define SOM 
som = MiniSom(x=som_grid_columns, y=som_grid_columns, input_len=14, sigma=sigma, learning_rate=learning_rate) 
# Initializing Weights 
som.random_weights_init(X)




# Training 
som.train_random(X, iterations) 
     


# Returns the distance map from the weights 
som.distance_map()



from pylab import plot, axis, show, pcolor, colorbar, bone 
bone() 
pcolor(som.distance_map().T) 
colorbar() 
show() 



bone() 
pcolor(som.distance_map().T) 
colorbar() 
markers = ['o', 's'] 
colors = ['r', 'g'] 
for i, x in enumerate(X): 
  w = som.winner(x) 
  plot(w[0]+0.5, w[1]+0.5, markers[y[i]], markeredgecolor=colors[y[i]], markerfacecolor='None', markersize=10, markeredgewidth=2) 
show()



mappings = som.win_map(X) 
mappings



mappings.keys()



len(mappings.keys())




frauds = np.concatenate((mappings[(4,6)], mappings[(6,7)]), axis=0)
frauds
     


# the list of customers who are frauds: 
frauds1 = sc.inverse_transform(frauds) 
pd.DataFrame(frauds1)